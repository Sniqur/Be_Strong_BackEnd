# # Docker
# # Build and push an image to Azure Container Registry
# # https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# trigger:
# - main

# resources:
# - repo: self

# variables:
#   # Container registry service connection established during pipeline creation
#   azureSubscription: 'Azure subscription 1(4)(1a8f5438-2e23-4a1f-b53c-3ebf42a36c48)'
#   appName: 'WebAppBeStrong2'
#   dockerRegistryServiceConnection: '7f8f58d4-fd3e-4df5-b229-645b96f6a61d'
#   imageRepository: 'sniqurbestrongbackend'
#   containerRegistry: 'bestrongregistry.azurecr.io'
#   dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
#   tag: '$(Build.BuildId)'
  
#   ACR_NAME: 'bestrongregistry'

#   # Agent VM image name
#   vmImageName: 'ubuntu-latest'

# stages:
# - stage: Build
#   displayName: Build and push stage
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: $(vmImageName)
#     steps:

#     - task: AzureCLI@2
#       inputs:
#        azureSubscription: $(azureSubscription)
#        scriptType: 'bash'
#        scriptLocation: 'inlineScript'
#        inlineScript: |
#           az acr login --name $(ACR_NAME)
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: $(imageRepository)
#         dockerfile: $(dockerfilePath)
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)


# ## Add the below snippet at the end of your pipeline
#     - task: AzureWebAppContainer@1
#       displayName: 'Azure Web App on Container Deploy'
#       inputs:
#         azureSubscription: $(azureSubscription)
#         appName: $(appName)
#         containers: $(containerRegistry)/$(imageRepository):$(tag)

        
        

trigger:
- main

resources:
- repo: self

variables:
  # Azure Subscription and App Details
  azureSubscription: 'Azure subscription 1(4)(1a8f5438-2e23-4a1f-b53c-3ebf42a36c48)'
  appName: 'WebAppBeStrong2'
  imageRepository: 'sniqurbestrongbackend'
  containerRegistry: 'bestrongregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # ACR details
  ACR_NAME: $(ACR_NAME)
  ACR_USERNAME: $(ACR_USERNAME)
  ACR_PASSWORD: $(ACR_PASSWORD)

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build Docker Image
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: AzureCLI@2
      displayName: 'Login to Azure Container Registry'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az acr login -n $(ACR_NAME)

    - script: |
        docker build -f $(dockerfilePath) -t $(containerRegistry)/$(imageRepository):$(tag) .
        docker push $(containerRegistry)/$(imageRepository):$(tag)
      displayName: 'Build and Push Docker Image'

    - task: AzureWebAppContainer@1
      displayName: 'Deploy Docker Image to Azure Web App'
      inputs:
        azureSubscription: $(azureSubscription)
        appName: $(appName)
        containers: $(containerRegistry)/$(imageRepository):$(tag)
